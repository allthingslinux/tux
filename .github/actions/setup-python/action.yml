name: Setup Python Environment
description: Set up Python with Uv, dependencies, and optional Prisma client generation
inputs:
  python-version:
    description: Python version to use
    required: false
    default: '3.13'
  uv-version:
    description: Uv version to install (e.g. 0.8.8)
    required: false
    default: 0.8.8
  enable-cache:
    description: Enable uv cache persistence
    required: false
    default: 'true'
  generate-prisma:
    description: Whether to generate Prisma client
    required: false
    default: 'true'
runs:
  using: composite
  steps:
    # PYTHON ENVIRONMENT SETUP (use GitHub's cached Python)
    - name: Set up Python
      uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065 # v5
      with:
        python-version: ${{ inputs.python-version }}

    # UV INSTALLATION
    # Installs uv and optionally enables cache persistence
    - name: Install uv
      uses: astral-sh/setup-uv@v6
      with:
        version: ${{ inputs.uv-version }}
        enable-cache: ${{ inputs.enable-cache }}

    # DEPENDENCY INSTALLATION
    # Install project with locked dependencies
    - name: Install dependencies
      shell: bash
      run: uv sync --frozen

    # CONDITIONAL PRISMA CLIENT GENERATION
    # Generates Prisma database client when needed for database operations
    - name: Generate Prisma client
      if: ${{ inputs.generate-prisma == 'true' }}
      shell: bash
      run: uv run prisma generate
