---
name: Tests
on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ github.event_name == 'pull_request' }}
env:
  PYTHON_VERSION: '3.13'
  COVERAGE_THRESHOLD: 0
  TEST_MARKERS: not slow and not docker
jobs:
  changes:
    name: File Detection
    runs-on: ubuntu-latest
    outputs:
      python: ${{ steps.python_changes.outputs.any_changed }}
      tests: ${{ steps.test_changes.outputs.any_changed }}
      any: ${{ steps.test_changes.outputs.any_changed }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Check Python
        uses: tj-actions/changed-files@v46
        id: python_changes
        with:
          files: |
            **/*.py
            pyproject.toml
            uv.lock
      - name: Check Tests
        uses: tj-actions/changed-files@v46
        id: test_changes
        with:
          files: |
            tests/**
            conftest.py
      - name: Set Outputs
        run: |
          {
            echo "python=${{ steps.python_changes.outputs.any_changed }}"
            echo "tests=${{ steps.test_changes.outputs.any_changed }}"
          } >> "$GITHUB_OUTPUT"

          # Check if any relevant files changed
          if [[ "${{ steps.python_changes.outputs.any_changed }}" == "true" ]] || \
             [[ "${{ steps.test_changes.outputs.any_changed }}" == "true" ]]; then
            echo "any=true" >> "$GITHUB_OUTPUT"
          else
            echo "any=false" >> "$GITHUB_OUTPUT"
          fi
  unit:
    name: Unit Tests
    runs-on: ubuntu-latest
    needs: [changes]
    if: needs.changes.outputs.any == 'true' || github.event_name == 'workflow_dispatch'
    permissions:
      contents: read
      pull-requests: write
    strategy:
      fail-fast: false
      matrix:
        python-version: ['3.13']
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Setup Python
        uses: ./.github/actions/setup-python
        with:
          python-version: ${{ matrix.python-version }}
          enable-cache: true
      - name: Create Test Environment
        uses: ./.github/actions/create-test-env
        with:
          additional-vars: |
            PROD_DATABASE_URL=sqlite:///tmp/test.db
            PROD_BOT_TOKEN=test_token_for_ci
      - name: Run Tests
        run: |
          echo "Running unit tests with coverage..."
          # Adaptive parallel execution based on test count
          TEST_COUNT=$(uv run pytest --collect-only -q tests/ -m "${{ env.TEST_MARKERS }}" 2>/dev/null | grep -c "test session starts" || echo "0")
          if [ "$TEST_COUNT" -gt 10 ]; then
            echo "Running $TEST_COUNT tests in parallel..."
            uv run pytest tests/ -v \
              --cov=tux \
              --cov-branch \
              --cov-report=xml:coverage-unit.xml \
              --cov-report=term-missing:skip-covered \
              -m "${{ env.TEST_MARKERS }}" \
              --junitxml=junit-unit.xml \
              -o junit_family=legacy \
              --cov-fail-under=${{ env.COVERAGE_THRESHOLD }} \
              -n auto | tee pytest-coverage.txt
          else
            echo "Running $TEST_COUNT tests sequentially..."
            uv run pytest tests/ -v \
              --cov=tux \
              --cov-branch \
              --cov-report=xml:coverage-unit.xml \
              --cov-report=term-missing:skip-covered \
              -m "${{ env.TEST_MARKERS }}" \
              --junitxml=junit-unit.xml \
              -o junit_family=legacy \
              --cov-fail-under=${{ env.COVERAGE_THRESHOLD }} | tee pytest-coverage.txt
          fi
          echo "Unit test coverage generation completed"
      - name: Upload Unit Test Coverage
        uses: actions/upload-artifact@v4
        with:
          name: unit-test-coverage
          path: |
            pytest-coverage.txt
            junit-unit.xml
          if-no-files-found: ignore
  database:
    name: Database Tests
    runs-on: ubuntu-latest
    needs: [changes]
    if: needs.changes.outputs.any == 'true' || github.event_name == 'workflow_dispatch'
    permissions:
      contents: read
      pull-requests: write
    strategy:
      fail-fast: false
      matrix:
        python-version: ['3.13']
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Setup Python
        uses: ./.github/actions/setup-python
        with:
          python-version: ${{ matrix.python-version }}
          enable-cache: true
      - name: Create Test Environment
        uses: ./.github/actions/create-test-env
        with:
          additional-vars: |
            PROD_DATABASE_URL=sqlite:///tmp/test.db
            PROD_BOT_TOKEN=test_token_for_ci
      - name: Run Database Tests
        run: |
          uv run pytest tests/tux/database/ -v \
            --cov=tux/database \
            --cov-branch \
            --cov-report=xml:coverage-database.xml \
            --cov-report=term-missing:skip-covered \
            --junitxml=junit-database.xml \
            -o junit_family=legacy \
            --cov-fail-under=${{ env.COVERAGE_THRESHOLD }} | tee pytest-database-coverage.txt
      - name: Upload Database Test Coverage
        uses: actions/upload-artifact@v4
        with:
          name: database-test-coverage
          path: |
            pytest-database-coverage.txt
            junit-database.xml
          if-no-files-found: ignore
  e2e:
    name: E2E Tests
    runs-on: ubuntu-latest
    needs: [changes]
    if: needs.changes.outputs.any == 'true' || github.event_name == 'workflow_dispatch'
    permissions:
      contents: read
      pull-requests: write
    strategy:
      fail-fast: false
      matrix:
        python-version: ['3.13']
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Setup Python
        uses: ./.github/actions/setup-python
        with:
          python-version: ${{ matrix.python-version }}
          enable-cache: true
      - name: Create Test Environment
        uses: ./.github/actions/create-test-env
        with:
          additional-vars: |
            PROD_DATABASE_URL=sqlite:///tmp/test.db
            PROD_BOT_TOKEN=test_token_for_ci
      - name: Run E2E Tests
        run: |
          uv run pytest tests/e2e/ -v \
            --cov=tux \
            --cov-branch \
            --cov-report=xml:coverage-e2e.xml \
            --cov-report=term-missing:skip-covered \
            --junitxml=junit-e2e.xml \
            -o junit_family=legacy \
            --cov-fail-under=${{ env.COVERAGE_THRESHOLD }} | tee pytest-e2e-coverage.txt
      - name: Upload E2E Test Coverage
        uses: actions/upload-artifact@v4
        with:
          name: e2e-test-coverage
          path: |
            pytest-e2e-coverage.txt
            junit-e2e.xml
          if-no-files-found: ignore
  coverage-report:
    name: Coverage Report
    runs-on: ubuntu-latest
    needs: [changes, unit, database, e2e]
    if: always() && (needs.changes.outputs.any == 'true' || github.event_name == 'workflow_dispatch')
    permissions:
      contents: read
      pull-requests: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Download Unit Test Coverage
        uses: actions/download-artifact@v4
        with:
          name: unit-test-coverage
          path: .
      - name: Download Database Test Coverage
        uses: actions/download-artifact@v4
        with:
          name: database-test-coverage
          path: .
      - name: Download E2E Test Coverage
        uses: actions/download-artifact@v4
        with:
          name: e2e-test-coverage
          path: .
      - name: Generate Coverage Report
        uses: MishaKav/pytest-coverage-comment@main
        with:
          multiple-files: |
            Unit Tests, ./pytest-coverage.txt, ./junit-unit.xml
            Database Tests, ./pytest-database-coverage.txt, ./junit-database.xml
            E2E Tests, ./pytest-e2e-coverage.txt, ./junit-e2e.xml
          title: Comprehensive Test Coverage Report
          badge-title: Coverage
          report-only-changed-files: true
