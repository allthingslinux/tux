---
name: Maintenance
on:
  push:
    branches: [main]
  workflow_dispatch:
    inputs:
      cleanup_images:
        description: Clean up old Docker images
        type: boolean
        default: false
      keep_amount:
        description: Number of images to keep
        required: false
        default: '10'
      remove_untagged:
        description: Remove untagged images
        type: boolean
        default: false
      manual_commit_ref:
        description: SHA to compare for TODOs
        required: false
      manual_base_ref:
        description: Optional earlier SHA for TODOs
        required: false
  schedule:
    - cron: 0 3 1 * *
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: false
env:
  ADMIN_PAT: ${{ secrets.ADMIN_PAT }}
jobs:
  todos:
    name: TODOs
    runs-on: ubuntu-latest
    if: github.event_name == 'push' || (github.event_name == 'workflow_dispatch' &&
      github.event.inputs.manual_commit_ref)
    permissions:
      contents: read
      issues: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Convert
        uses: alstr/todo-to-issue-action@v5.1.13
        with:
          CLOSE_ISSUES: true
          INSERT_ISSUE_URLS: true
          AUTO_ASSIGN: true
          IDENTIFIERS: |
            [{"name": "TODO", "labels": ["enhancement"]}, {"name": "FIXME", "labels": ["bug"]}]
          ESCAPE: true
          IGNORE: |
            .github/,node_modules/,dist/,build/,vendor/,uv.lock
          PROJECTS_SECRET: ${{ env.ADMIN_PAT }}
        env:
          MANUAL_COMMIT_REF: ${{ github.event.inputs.manual_commit_ref }}
          MANUAL_BASE_REF: ${{ github.event.inputs.manual_base_ref }}
  cleanup:
    name: Cleanup
    runs-on: ubuntu-latest
    if: github.event_name == 'schedule' || (github.event_name == 'workflow_dispatch'
      && github.event.inputs.cleanup_images == 'true')
    permissions:
      packages: write
      contents: read
    steps:
      - name: Clean Old Images
        uses: actions/delete-package-versions@v5
        with:
          package-name: tux
          package-type: container
          min-versions-to-keep: ${{ github.event.inputs.keep_amount || '10' }}
          delete-only-untagged-versions: ${{ github.event.inputs.remove_untagged || 'false' }}
  health:
    name: Health Check
    runs-on: ubuntu-latest
    if: github.event_name == 'schedule'
    permissions:
      contents: read
      issues: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Check Large Files
        run: |
          echo "Checking for files larger than 50MB..."
          find . -type f -size +50M -not -path "./.git/*" || echo "No large files found"
      - name: Check Dependencies
        run: |
          echo "Checking for outdated dependencies..."
          uv outdated || echo "No outdated dependencies found"
      - name: Check Repository Size
        run: |
          echo "Repository size analysis..."
          du -sh . || echo "Could not determine repository size"
      - name: Check Stale Branches
        run: |
          echo "Checking for stale branches..."
          git branch -r --sort=-committerdate | head -10 || echo "Could not check branches"
      - name: Check Large Commits
        run: |-
          echo "Checking for large commits..."
          git log --stat --oneline | head -20 || echo "Could not check commits"
