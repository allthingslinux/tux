---
default_language_version:
  python: python3.13
repos:
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v6.0.0
    hooks:
      - id: check-json
      - id: check-toml
      - id: end-of-file-fixer
      - id: trailing-whitespace
        exclude: \.md$
  - repo: https://github.com/abravalheri/validate-pyproject
    rev: v0.24.1
    hooks:
      - id: validate-pyproject
        additional_dependencies: ['validate-pyproject-schema-store[all]']
  - repo: https://github.com/lyz-code/yamlfix
    rev: 1.17.0
    hooks:
      - id: yamlfix
        exclude: \.(commitlintrc|pre-commit-hooks)\.yaml$|docker-compose.*\.yml$
  - repo: https://github.com/adrienverge/yamllint
    rev: v1.37.1
    hooks:
      - id: yamllint
        exclude: docker-compose.*\.yml$
        args: [-c=.yamllint.yml]
  - repo: https://github.com/rhysd/actionlint
    rev: v1.7.7
    hooks:
      - id: actionlint
  - repo: https://github.com/igorshubovych/markdownlint-cli
    rev: v0.45.0
    hooks:
      - id: markdownlint
  - repo: https://github.com/asottile/pyupgrade
    rev: v3.20.0
    hooks:
      - id: pyupgrade
        args: [--py313-plus]
        exclude: ^(src/tux/database/models/.*\.py)$
  - repo: https://github.com/asottile/add-trailing-comma
    rev: v3.2.0
    hooks:
      - id: add-trailing-comma
  - repo: https://github.com/astral-sh/ruff-pre-commit
    rev: v0.12.10
    hooks:
      - id: ruff-check
        args: [--fix]
  - repo: https://github.com/astral-sh/ruff-pre-commit
    rev: v0.12.10
    hooks:
      - id: ruff-format
  - repo: https://github.com/gitleaks/gitleaks
    rev: v8.28.0
    hooks:
      - id: gitleaks
  - repo: https://github.com/alessandrojcm/commitlint-pre-commit-hook
    rev: v9.22.0
    hooks:
      - id: commitlint
        stages: [commit-msg]
        additional_dependencies:
          - '@commitlint/cli'
          - '@commitlint/config-conventional'
  # - repo: local
  #   hooks:
  #     - id: settings-doc-markdown
  #       name: Generate settings-doc Markdown
  #       description: This hook generates a Markdown documentation from pydantic.BaseSettings
  #         to a file.
  # yamllint disable-line rule:line-length
  #       entry: uv run settings-doc generate --module tux.shared.config.settings --output-format markdown --update CONFIG.md --between "<!-- CONFIGURATION START -->" "<!-- CONFIGURATION END -->" --heading-offset 1
  #       language: system
  #       types: [file, python]
  #       pass_filenames: false
  #     - id: settings-doc-dotenv
  #       name: Generate settings-doc env.example
  #       description: This hook generates an env.example template from pydantic.BaseSettings
  #         to a file.
  #       entry: uv run settings-doc generate --module tux.shared.config.settings --output-format
  #         dotenv --update env.example
  #       language: system
  #       types: [file, python]
  #       pass_filenames: false
      # Temporarily disabled - causes conflicts with end-of-file-fixer
      # TODO: Re-enable once we resolve the newline handling issue
      # - id: settings-doc-env-example
      #   name: Generate env.example template
      #   description: This hook generates env.example from pydantic.BaseSettings to
      #     a file.
      #   entry: make docs-env-example
      #   language: system
      #   types: [file, python]
      #   pass_filenames: false
exclude: ^(\.archive/|.*typings/|node_modules/|\.venv/|\.kiro/).*$
ci:
  autofix_commit_msg: 'style: auto fixes from pre-commit hooks'
  autoupdate_commit_msg: 'chore: update pre-commit hook versions'
