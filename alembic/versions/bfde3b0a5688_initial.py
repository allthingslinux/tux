"""initial

Revision ID: bfde3b0a5688
Revises: 
Create Date: 2025-07-28 14:29:10.900774

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel


# revision identifiers, used by Alembic.
revision: str = 'bfde3b0a5688'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('afkmodel',
    sa.Column('member_id', sa.Integer(), nullable=False),
    sa.Column('nickname', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('reason', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('since', sa.DateTime(), nullable=False),
    sa.Column('until', sa.DateTime(), nullable=True),
    sa.Column('guild_id', sa.Integer(), nullable=False),
    sa.Column('enforced', sa.Boolean(), nullable=False),
    sa.Column('perm_afk', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['guild_id'], ['guild.guild_id'], ),
    sa.PrimaryKeyConstraint('member_id')
    )
    op.create_table('case',
    sa.Column('case_id', sa.Integer(), nullable=False),
    sa.Column('case_status', sa.Boolean(), nullable=True),
    sa.Column('case_type', sa.Enum('BAN', 'UNBAN', 'HACKBAN', 'TEMPBAN', 'KICK', 'SNIPPETBAN', 'TIMEOUT', 'UNTIMEOUT', 'WARN', 'JAIL', 'UNJAIL', 'SNIPPETUNBAN', 'UNTEMPBAN', 'POLLBAN', 'POLLUNBAN', name='casetype'), nullable=False),
    sa.Column('case_reason', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('case_moderator_id', sa.Integer(), nullable=False),
    sa.Column('case_user_id', sa.Integer(), nullable=False),
    sa.Column('case_user_roles', sa.JSON(), nullable=True),
    sa.Column('case_number', sa.Integer(), nullable=True),
    sa.Column('case_created_at', sa.DateTime(), nullable=True),
    sa.Column('case_expires_at', sa.DateTime(), nullable=True),
    sa.Column('case_tempban_expired', sa.Boolean(), nullable=True),
    sa.Column('guild_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['guild_id'], ['guild.guild_id'], ),
    sa.PrimaryKeyConstraint('case_id')
    )
    op.create_table('guildconfig',
    sa.Column('guild_id', sa.Integer(), nullable=False),
    sa.Column('prefix', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('mod_log_id', sa.Integer(), nullable=True),
    sa.Column('audit_log_id', sa.Integer(), nullable=True),
    sa.Column('join_log_id', sa.Integer(), nullable=True),
    sa.Column('private_log_id', sa.Integer(), nullable=True),
    sa.Column('report_log_id', sa.Integer(), nullable=True),
    sa.Column('dev_log_id', sa.Integer(), nullable=True),
    sa.Column('jail_channel_id', sa.Integer(), nullable=True),
    sa.Column('general_channel_id', sa.Integer(), nullable=True),
    sa.Column('starboard_channel_id', sa.Integer(), nullable=True),
    sa.Column('perm_level_0_role_id', sa.Integer(), nullable=True),
    sa.Column('perm_level_1_role_id', sa.Integer(), nullable=True),
    sa.Column('perm_level_2_role_id', sa.Integer(), nullable=True),
    sa.Column('perm_level_3_role_id', sa.Integer(), nullable=True),
    sa.Column('perm_level_4_role_id', sa.Integer(), nullable=True),
    sa.Column('perm_level_5_role_id', sa.Integer(), nullable=True),
    sa.Column('perm_level_6_role_id', sa.Integer(), nullable=True),
    sa.Column('perm_level_7_role_id', sa.Integer(), nullable=True),
    sa.Column('base_staff_role_id', sa.Integer(), nullable=True),
    sa.Column('base_member_role_id', sa.Integer(), nullable=True),
    sa.Column('jail_role_id', sa.Integer(), nullable=True),
    sa.Column('quarantine_role_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['guild_id'], ['guild.guild_id'], ),
    sa.PrimaryKeyConstraint('guild_id')
    )
    op.create_table('levels',
    sa.Column('member_id', sa.Integer(), nullable=False),
    sa.Column('guild_id', sa.Integer(), nullable=False),
    sa.Column('xp', sa.Float(), nullable=False),
    sa.Column('level', sa.Integer(), nullable=False),
    sa.Column('blacklisted', sa.Boolean(), nullable=False),
    sa.Column('last_message', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['guild_id'], ['guild.guild_id'], ),
    sa.PrimaryKeyConstraint('member_id', 'guild_id'),
    sqlite_autoincrement=True
    )
    op.create_table('note',
    sa.Column('note_id', sa.Integer(), nullable=False),
    sa.Column('note_content', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('note_created_at', sa.DateTime(), nullable=False),
    sa.Column('note_moderator_id', sa.Integer(), nullable=False),
    sa.Column('note_user_id', sa.Integer(), nullable=False),
    sa.Column('note_number', sa.Integer(), nullable=True),
    sa.Column('guild_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['guild_id'], ['guild.guild_id'], ),
    sa.PrimaryKeyConstraint('note_id')
    )
    op.create_table('reminder',
    sa.Column('reminder_id', sa.Integer(), nullable=False),
    sa.Column('reminder_content', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('reminder_created_at', sa.DateTime(), nullable=False),
    sa.Column('reminder_expires_at', sa.DateTime(), nullable=False),
    sa.Column('reminder_channel_id', sa.Integer(), nullable=False),
    sa.Column('reminder_user_id', sa.Integer(), nullable=False),
    sa.Column('reminder_sent', sa.Boolean(), nullable=False),
    sa.Column('guild_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['guild_id'], ['guild.guild_id'], ),
    sa.PrimaryKeyConstraint('reminder_id')
    )
    op.create_table('snippet',
    sa.Column('snippet_id', sa.Integer(), nullable=False),
    sa.Column('snippet_name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('snippet_content', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('snippet_user_id', sa.Integer(), nullable=False),
    sa.Column('snippet_created_at', sa.DateTime(), nullable=False),
    sa.Column('guild_id', sa.Integer(), nullable=False),
    sa.Column('uses', sa.Integer(), nullable=False),
    sa.Column('locked', sa.Boolean(), nullable=False),
    sa.Column('alias', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.ForeignKeyConstraint(['guild_id'], ['guild.guild_id'], ),
    sa.PrimaryKeyConstraint('snippet_id')
    )
    op.create_table('starboard',
    sa.Column('guild_id', sa.Integer(), nullable=False),
    sa.Column('starboard_channel_id', sa.Integer(), nullable=False),
    sa.Column('starboard_emoji', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('starboard_threshold', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['guild_id'], ['guild.guild_id'], ),
    sa.PrimaryKeyConstraint('guild_id')
    )
    op.create_table('starboardmessage',
    sa.Column('message_id', sa.Integer(), nullable=False),
    sa.Column('message_content', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('message_created_at', sa.DateTime(), nullable=False),
    sa.Column('message_expires_at', sa.DateTime(), nullable=False),
    sa.Column('message_channel_id', sa.Integer(), nullable=False),
    sa.Column('message_user_id', sa.Integer(), nullable=False),
    sa.Column('message_guild_id', sa.Integer(), nullable=False),
    sa.Column('star_count', sa.Integer(), nullable=False),
    sa.Column('starboard_message_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['message_guild_id'], ['guild.guild_id'], ),
    sa.PrimaryKeyConstraint('message_id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('starboardmessage')
    op.drop_table('starboard')
    op.drop_table('snippet')
    op.drop_table('reminder')
    op.drop_table('note')
    op.drop_table('levels')
    op.drop_table('guildconfig')
    op.drop_table('case')
    op.drop_table('afkmodel')
    # ### end Alembic commands ###
