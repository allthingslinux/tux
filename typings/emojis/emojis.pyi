"""
This type stub file was generated by pyright.
"""

ALIAS_TO_EMOJI = ...
EMOJI_TO_ALIAS = ...
EMOJI_TO_ALIAS_SORTED = ...
RE_TEXT_TO_EMOJI_GROUP = ...
RE_TEXT_TO_EMOJI = ...
RE_EMOJI_TO_TEXT_GROUP = ...
RE_EMOJI_TO_TEXT = ...
def encode(msg): # -> str:
    '''
    Encode Emoji aliases into unicode Emoji values.

    :param msg: String to encode.
    :rtype: str

    Usage::

        >>> import emojis
        >>> emojis.encode('This is a message with emojis :smile: :snake:')
        'This is a message with emojis 😄 🐍'
    '''
    ...

def decode(msg): # -> str:
    '''
    Decode unicode Emoji values into Emoji aliases.

    :param msg: String to decode.
    :rtype: str

    Usage::

        >>> import emojis
        >>> emojis.decode('This is a message with emojis 😄 🐍')
        'This is a message with emojis :smile: :snake:'
    '''
    ...

def get(msg): # -> set[str]:
    '''
    Returns unique Emojis in the given string.

    :param msg: String to search for Emojis.
    :rtype: set
    '''
    ...

def iter(msg): # -> Generator[str, None, None]:
    '''
    Iterates over all Emojis found in the message.

    :param msg: String to search for Emojis.
    :rtype: iterator
    '''
    ...

def count(msg, unique=...): # -> int:
    '''
    Returns Emoji count in the given string.

    :param msg: String to search for Emojis.
    :param unique: (optional) Boolean, return unique values only.
    :rtype: int
    '''
    ...

