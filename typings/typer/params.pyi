"""
This type stub file was generated by pyright.
"""

import click
import click.shell_completion
from typing import Any, Callable, List, Optional, TYPE_CHECKING, Type, Union, overload

if TYPE_CHECKING:
    ...
@overload
def Option(default: Optional[Any] = ..., *param_decls: str, callback: Optional[Callable[..., Any]] = ..., metavar: Optional[str] = ..., expose_value: bool = ..., is_eager: bool = ..., envvar: Optional[Union[str, List[str]]] = ..., shell_complete: Optional[Callable[[click.Context, click.Parameter, str], Union[List[click.shell_completion.CompletionItem], List[str]],]] = ..., autocompletion: Optional[Callable[..., Any]] = ..., default_factory: Optional[Callable[[], Any]] = ..., parser: Optional[Callable[[str], Any]] = ..., show_default: Union[bool, str] = ..., prompt: Union[bool, str] = ..., confirmation_prompt: bool = ..., prompt_required: bool = ..., hide_input: bool = ..., is_flag: Optional[bool] = ..., flag_value: Optional[Any] = ..., count: bool = ..., allow_from_autoenv: bool = ..., help: Optional[str] = ..., hidden: bool = ..., show_choices: bool = ..., show_envvar: bool = ..., case_sensitive: bool = ..., min: Optional[Union[int, float]] = ..., max: Optional[Union[int, float]] = ..., clamp: bool = ..., formats: Optional[List[str]] = ..., mode: Optional[str] = ..., encoding: Optional[str] = ..., errors: Optional[str] = ..., lazy: Optional[bool] = ..., atomic: bool = ..., exists: bool = ..., file_okay: bool = ..., dir_okay: bool = ..., writable: bool = ..., readable: bool = ..., resolve_path: bool = ..., allow_dash: bool = ..., path_type: Union[None, Type[str], Type[bytes]] = ..., rich_help_panel: Union[str, None] = ...) -> Any:
    ...

@overload
def Option(default: Optional[Any] = ..., *param_decls: str, callback: Optional[Callable[..., Any]] = ..., metavar: Optional[str] = ..., expose_value: bool = ..., is_eager: bool = ..., envvar: Optional[Union[str, List[str]]] = ..., shell_complete: Optional[Callable[[click.Context, click.Parameter, str], Union[List[click.shell_completion.CompletionItem], List[str]],]] = ..., autocompletion: Optional[Callable[..., Any]] = ..., default_factory: Optional[Callable[[], Any]] = ..., click_type: Optional[click.ParamType] = ..., show_default: Union[bool, str] = ..., prompt: Union[bool, str] = ..., confirmation_prompt: bool = ..., prompt_required: bool = ..., hide_input: bool = ..., is_flag: Optional[bool] = ..., flag_value: Optional[Any] = ..., count: bool = ..., allow_from_autoenv: bool = ..., help: Optional[str] = ..., hidden: bool = ..., show_choices: bool = ..., show_envvar: bool = ..., case_sensitive: bool = ..., min: Optional[Union[int, float]] = ..., max: Optional[Union[int, float]] = ..., clamp: bool = ..., formats: Optional[List[str]] = ..., mode: Optional[str] = ..., encoding: Optional[str] = ..., errors: Optional[str] = ..., lazy: Optional[bool] = ..., atomic: bool = ..., exists: bool = ..., file_okay: bool = ..., dir_okay: bool = ..., writable: bool = ..., readable: bool = ..., resolve_path: bool = ..., allow_dash: bool = ..., path_type: Union[None, Type[str], Type[bytes]] = ..., rich_help_panel: Union[str, None] = ...) -> Any:
    ...

def Option(default: Optional[Any] = ..., *param_decls: str, callback: Optional[Callable[..., Any]] = ..., metavar: Optional[str] = ..., expose_value: bool = ..., is_eager: bool = ..., envvar: Optional[Union[str, List[str]]] = ..., shell_complete: Optional[Callable[[click.Context, click.Parameter, str], Union[List[click.shell_completion.CompletionItem], List[str]],]] = ..., autocompletion: Optional[Callable[..., Any]] = ..., default_factory: Optional[Callable[[], Any]] = ..., parser: Optional[Callable[[str], Any]] = ..., click_type: Optional[click.ParamType] = ..., show_default: Union[bool, str] = ..., prompt: Union[bool, str] = ..., confirmation_prompt: bool = ..., prompt_required: bool = ..., hide_input: bool = ..., is_flag: Optional[bool] = ..., flag_value: Optional[Any] = ..., count: bool = ..., allow_from_autoenv: bool = ..., help: Optional[str] = ..., hidden: bool = ..., show_choices: bool = ..., show_envvar: bool = ..., case_sensitive: bool = ..., min: Optional[Union[int, float]] = ..., max: Optional[Union[int, float]] = ..., clamp: bool = ..., formats: Optional[List[str]] = ..., mode: Optional[str] = ..., encoding: Optional[str] = ..., errors: Optional[str] = ..., lazy: Optional[bool] = ..., atomic: bool = ..., exists: bool = ..., file_okay: bool = ..., dir_okay: bool = ..., writable: bool = ..., readable: bool = ..., resolve_path: bool = ..., allow_dash: bool = ..., path_type: Union[None, Type[str], Type[bytes]] = ..., rich_help_panel: Union[str, None] = ...) -> Any:
    ...

@overload
def Argument(default: Optional[Any] = ..., *, callback: Optional[Callable[..., Any]] = ..., metavar: Optional[str] = ..., expose_value: bool = ..., is_eager: bool = ..., envvar: Optional[Union[str, List[str]]] = ..., shell_complete: Optional[Callable[[click.Context, click.Parameter, str], Union[List[click.shell_completion.CompletionItem], List[str]],]] = ..., autocompletion: Optional[Callable[..., Any]] = ..., default_factory: Optional[Callable[[], Any]] = ..., parser: Optional[Callable[[str], Any]] = ..., show_default: Union[bool, str] = ..., show_choices: bool = ..., show_envvar: bool = ..., help: Optional[str] = ..., hidden: bool = ..., case_sensitive: bool = ..., min: Optional[Union[int, float]] = ..., max: Optional[Union[int, float]] = ..., clamp: bool = ..., formats: Optional[List[str]] = ..., mode: Optional[str] = ..., encoding: Optional[str] = ..., errors: Optional[str] = ..., lazy: Optional[bool] = ..., atomic: bool = ..., exists: bool = ..., file_okay: bool = ..., dir_okay: bool = ..., writable: bool = ..., readable: bool = ..., resolve_path: bool = ..., allow_dash: bool = ..., path_type: Union[None, Type[str], Type[bytes]] = ..., rich_help_panel: Union[str, None] = ...) -> Any:
    ...

@overload
def Argument(default: Optional[Any] = ..., *, callback: Optional[Callable[..., Any]] = ..., metavar: Optional[str] = ..., expose_value: bool = ..., is_eager: bool = ..., envvar: Optional[Union[str, List[str]]] = ..., shell_complete: Optional[Callable[[click.Context, click.Parameter, str], Union[List[click.shell_completion.CompletionItem], List[str]],]] = ..., autocompletion: Optional[Callable[..., Any]] = ..., default_factory: Optional[Callable[[], Any]] = ..., click_type: Optional[click.ParamType] = ..., show_default: Union[bool, str] = ..., show_choices: bool = ..., show_envvar: bool = ..., help: Optional[str] = ..., hidden: bool = ..., case_sensitive: bool = ..., min: Optional[Union[int, float]] = ..., max: Optional[Union[int, float]] = ..., clamp: bool = ..., formats: Optional[List[str]] = ..., mode: Optional[str] = ..., encoding: Optional[str] = ..., errors: Optional[str] = ..., lazy: Optional[bool] = ..., atomic: bool = ..., exists: bool = ..., file_okay: bool = ..., dir_okay: bool = ..., writable: bool = ..., readable: bool = ..., resolve_path: bool = ..., allow_dash: bool = ..., path_type: Union[None, Type[str], Type[bytes]] = ..., rich_help_panel: Union[str, None] = ...) -> Any:
    ...

def Argument(default: Optional[Any] = ..., *, callback: Optional[Callable[..., Any]] = ..., metavar: Optional[str] = ..., expose_value: bool = ..., is_eager: bool = ..., envvar: Optional[Union[str, List[str]]] = ..., shell_complete: Optional[Callable[[click.Context, click.Parameter, str], Union[List[click.shell_completion.CompletionItem], List[str]],]] = ..., autocompletion: Optional[Callable[..., Any]] = ..., default_factory: Optional[Callable[[], Any]] = ..., parser: Optional[Callable[[str], Any]] = ..., click_type: Optional[click.ParamType] = ..., show_default: Union[bool, str] = ..., show_choices: bool = ..., show_envvar: bool = ..., help: Optional[str] = ..., hidden: bool = ..., case_sensitive: bool = ..., min: Optional[Union[int, float]] = ..., max: Optional[Union[int, float]] = ..., clamp: bool = ..., formats: Optional[List[str]] = ..., mode: Optional[str] = ..., encoding: Optional[str] = ..., errors: Optional[str] = ..., lazy: Optional[bool] = ..., atomic: bool = ..., exists: bool = ..., file_okay: bool = ..., dir_okay: bool = ..., writable: bool = ..., readable: bool = ..., resolve_path: bool = ..., allow_dash: bool = ..., path_type: Union[None, Type[str], Type[bytes]] = ..., rich_help_panel: Union[str, None] = ...) -> Any:
    ...

