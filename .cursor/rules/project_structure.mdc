---
description:
globs:
alwaysApply: false
---
# Tux Project Structure

This project is a Python application managed with Poetry.

## Key Directories:

- **`tux/`**: Contains the main Python source code for the application (e.g., `main.py`, `bot.py`, `cogs/`). [tux/](mdc:tux)
- **`config/`**: Holds configuration files (e.g., `settings.yml`). [config/](mdc:config)
- **`prisma/`**: Contains database schema definitions, primarily `prisma/schema/main.prisma`. [prisma/](mdc:prisma)
- **`docs/`**: Contains project documentation managed with MkDocs (`mkdocs.yml`). [docs/](mdc:docs)

## Key Files:

- **`pyproject.toml`**: Defines project metadata, dependencies (Poetry), and tool configurations (Ruff, Pyright, etc.). [pyproject.toml](mdc:pyproject.toml)
- **`poetry.lock`**: Locks dependency versions. [poetry.lock](mdc:poetry.lock)
- **`Dockerfile`**: Defines the Docker image build process. [Dockerfile](mdc:Dockerfile)
- **`docker-compose.yml`**: Defines services for Docker Compose. [docker-compose.yml](mdc:docker-compose.yml)
- **`README.md`**: Main project README file. [README.md](mdc:README.md)
- **`DEVELOPER.md`**: Guide for developers contributing to the project. [DEVELOPER.md](mdc:DEVELOPER.md)

This rule provides a high-level overview. You can add more details or specific file references as needed.
