# ==============================================================================
# REVIEWDOG CONFIGURATION - GitHub PR Commenting
# ==============================================================================
#
# This configuration file defines how reviewdog processes different linters
# and formats their output for GitHub pull request comments.
#
# INTEGRATED TOOLS:
# -----------------
# - basedpyright: Python type checking
# - ruff: Python linting and formatting
# - markdownlint: Markdown documentation linting
# - shellcheck: Shell script analysis
# - shfmt: Shell script formatting
# - actionlint: GitHub Actions validation
# - hadolint: Dockerfile linting
# - yamllint: YAML validation
# - gitleaks: Secret scanning
# - trivy: Container security scanning
#
# ==============================================================================
# REVIEWDOG BEHAVIOR
# Global settings for all tools
reviewdog:
  reporter: github-pr-review
  filter_mode: file
  fail_on_error: false
  level: warning
# ==============================================================================
# RUNNER CONFIGURATIONS
# ==============================================================================
# Python Type Checking
runner:
  basedpyright:
    cmd: uv run basedpyright --outputformat json
    format: rdjson
    name: Basedpyright
    level: warning

  # Python Linting
  ruff:
    cmd: uv run ruff check --output-format json .
    format: rdjson
    name: Ruff
    level: warning

  # Markdown Linting
  markdownlint:
    cmd: npx markdownlint --format json .
    format: rdjson
    name: MarkdownLint
    level: warning

  # Shell Script Analysis
  shellcheck:
    cmd: shellcheck --format json --shell bash --severity warning --color never $(find
      . -name "*.sh" -o -name "*.bash" -o -name "*.zsh" -o -path "./scripts/*")
    format: rdjson
    name: ShellCheck
    level: warning

  # Shell Script Formatting
  shfmt:
    cmd: shfmt -i 2 -ci -bn -sr -kp -w -s -p -f . | xargs shfmt -i 2 -ci -bn -sr -kp
      -w -s -p -d
    format: diff
    name: shfmt
    level: warning

  # GitHub Actions Validation
  actionlint:
    cmd: actionlint -format json
    format: rdjson
    name: ActionLint
    level: warning

  # Dockerfile Linting
  hadolint:
    cmd: hadolint --format json Dockerfile
    format: rdjson
    name: Hadolint
    level: warning

  # YAML Validation
  yamllint:
    cmd: yamllint --format json .
    format: rdjson
    name: YAMLLint
    level: warning

  # Secret Scanning
  gitleaks:
    cmd: gitleaks detect --format json --report-format json --report .
    format: rdjson
    name: Gitleaks
    level: error

  # Container Security Scanning
  trivy:
    cmd: trivy config --format json .
    format: rdjson
    name: Trivy
    level: warning
# ==============================================================================
# USAGE EXAMPLES:
# --------------
#
# Run all tools:
#   reviewdog -conf .reviewdog.yml
#
# Run specific tools:
#   reviewdog -conf .reviewdog.yml -runners=basedpyright,ruff
#
# Run with custom reporter:
#   reviewdog -conf .reviewdog.yml -reporter=github-pr-check
#
# Debug configuration:
#   reviewdog -conf .reviewdog.yml -tee
#
# ==============================================================================
